version: '3.8'

services:
  frontend:
    image: my-app-frontend:latest
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    ports:
      - "8080:80"
    networks:
      - app-network

  backend:
    image: my-app-backend:latest
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    environment:
      DATABASE_HOST: ecommerce_database
      DATABASE_USER: root
      DATABASE_PASSWORD: example
      DATABASE_NAME: my_database
    depends_on:
      - database
    networks:
      - app-network
   
  
  redis:
    image: redis:alpine
    deploy:
      replicas: 1
    networks:
      - app-network

  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080"
    networks:
      - app-network
    deploy:
      placement:
        constraints:
          - node.role == manager
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  database:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: ecommerce_database
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - ecommerce_database:/var/lib/mysql
    networks:
      - app-network
  
networks:
  app-network:
    driver: overlay
  

volumes:
  ecommerce_database:

